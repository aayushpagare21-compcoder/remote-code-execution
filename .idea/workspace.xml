<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="306109d3-b68b-4b1b-89c3-0ee37c753a46" name="Changes" comment="Refactor docker compose">
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/.prettierrc" beforeDir="false" afterPath="$PROJECT_DIR$/server/.prettierrc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/libs/cacheIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/libs/cacheIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/libs/envIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/libs/envIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/libs/loggerIntegration/development.logger.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/libs/loggerIntegration/development.logger.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/libs/loggerIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/libs/loggerIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/libs/loggerIntegration/production.logger.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/libs/loggerIntegration/production.logger.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/libs/queueIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/libs/queueIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/server/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/routes/v1/core.routes.js" beforeDir="false" afterPath="$PROJECT_DIR$/server/routes/v1/core.routes.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/.prettierrc" beforeDir="false" afterPath="$PROJECT_DIR$/workers/.prettierrc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/app.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/app.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/libs/cacheIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/libs/cacheIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/libs/envIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/libs/envIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/libs/loggerIntegration/development.logger.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/libs/loggerIntegration/development.logger.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/libs/loggerIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/libs/loggerIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/libs/loggerIntegration/production.logger.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/libs/loggerIntegration/production.logger.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/libs/queueIntegration/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/workers/libs/queueIntegration/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/workers/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/workers/package.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 3
}]]></component>
  <component name="ProjectId" id="2dnyZKKH5RCI1cLs3QMgQeWMGQj" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showScratchesAndConsoles" value="false" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "yarn",
    "ts.external.directory.path": "C:\\Program Files\\JetBrains\\IntelliJ IDEA 2023.3.2\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="306109d3-b68b-4b1b-89c3-0ee37c753a46" name="Changes" comment="" />
      <created>1710658195848</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1710658195848</updated>
      <workItem from="1710658220123" duration="10472000" />
    </task>
    <task id="LOCAL-00001" summary="Refactor docker compose">
      <option name="closed" value="true" />
      <created>1710658585593</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1710658585593</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Refactor docker compose" />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor docker compose" />
  </component>
</project>